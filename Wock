local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()
local InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua"))()

local Version = "1.0.0"

local Window = Fluent:CreateWindow({
    Title = "WockWARE" .. Version,
    SubTitle = "by K3wtf",
    TabWidth = 160,
    Size = UDim2.fromOffset(580, 460),
    Acrylic = true, -- The blur may be detectable, setting this to false disables blur entirely
    Theme = "Dark",
    MinimizeKey = Enum.KeyCode.LeftControl -- Used when theres no MinimizeKeybind
})

-- Fluent provides Lucide Icons https://lucide.dev/icons/ for the tabs, icons are optional
local Tabs = {
    Testing = Window:AddTab({ Title = "Testing", Icon = "hammer" }),
    Settings = Window:AddTab({ Title = "Settings", Icon = "settings" })
}

-- Hand the library over to our managers
SaveManager:SetLibrary(Fluent)
InterfaceManager:SetLibrary(Fluent)

-- Ignore keys that are used by ThemeManager.
SaveManager:IgnoreThemeSettings()

-- You can add indexes of elements the save manager should ignore
SaveManager:SetIgnoreIndexes({})

-- Set folder locations
InterfaceManager:SetFolder("FluentScriptHub")
SaveManager:SetFolder("FluentScriptHub/specific-game")

-- Build settings interface and config section
InterfaceManager:BuildInterfaceSection(Tabs.Settings)
SaveManager:BuildConfigSection(Tabs.Settings)

local Options = Fluent.Options

-- FOV Settings and Camera Setup
local player = game.Players.LocalPlayer
local camera = game.Workspace.CurrentCamera

-- Function to update FOV
local function updateFOV(newFOV)
    camera.FieldOfView = math.clamp(newFOV, 60, 120)
    print("FOV set to:", newFOV)
end

-- FOV Slider
local Slider = Tabs.Testing:AddSlider("Field Of View", {
    Title = "FOV Slider",
    Description = "Set FOV Value",
    Default = 60,
    Min = 60,
    Max = 120,
    Rounding = 1,
    Callback = function(Value)
        updateFOV(Value)
    end
})

-- Set the initial FOV value
Slider:SetValue(60)


-- Speed Slider
local Slider = Tabs.Testing:AddSlider("Slider", {
    Title = "Speed",
    Description = "AnyThing Over 24 is Blatant",
    Default = 18,
    Min = 23.79,
    Max = 100,
    Rounding = 1,
    Callback = function(Value)
        getgenv().Speed = Value
        getgenv().Enabled = true
        local players = game:GetService("Players")
        local player = players.LocalPlayer

        -- Function to bypass walkspeed changes
        local function bypassWalkSpeed()
            if getgenv().executed then
                return
            end
            getgenv().executed = true

            local mt = getrawmetatable(game)
            setreadonly(mt, false)

            local oldindex = mt.__index
            mt.__index = newcclosure(function(self, b)
                if b == 'WalkSpeed' then
                    return 16
                end
                return oldindex(self, b)
            end)
        end

        -- Run the bypass function once
        bypassWalkSpeed()

        -- Apply speed to the player's character when it's added
        player.CharacterAdded:Connect(function(char)
            bypassWalkSpeed()
            local humanoid = char:WaitForChild("Humanoid")
            humanoid.WalkSpeed = getgenv().Speed
        end)

        -- Continuously update speed while enabled
        while getgenv().Enabled and wait() do
            local humanoid = player.Character and player.Character:FindFirstChild("Humanoid")
            if humanoid then
                humanoid.WalkSpeed = getgenv().Speed
            end
        end
    end
})

Slider:OnChanged(function(Value)
    print("Slider changed:", Value)
end)

Slider:SetValue(3)







Window:SelectTab(1)

Fluent:Notify({
    Title = "Testing",
    Content = "The script has been loaded and is in early Beta.",
    Duration = 8
})

-- You can use the SaveManager:LoadAutoloadConfig() to load a config
SaveManager:LoadAutoloadConfig()
print("!WockWARE 0N T0P!")
